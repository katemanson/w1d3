# Homework

### A. Given the following data structure:

```
lines = ['Gyle Centre', 'Edinburgh Park', 'Murrayfield Stadium', 'Haymarket', 'Princes Street']
```

1. Work out how many stops there are in the current west array

    lines.count
    lines.size
    lines.length

2. Return 'Edinburgh Park' from the array

    lines[1]
    lines[-4]

3. How many ways can we return 'Princes Street' from the array?

    lines[4]
    lines[-1]
    lines.last
    lines.last(1)
    lines.at(4)
    lines.at(-1)
    lines.bsearch { |x| x == "Princes Street" }
    lines.values_at(4)  #returns the array ["Princes Street"]
    lines.values_at(-1)  #returns the array ["Princes Street"]

4. Work out the index position of 'Haymarket' 

    lines.index("Haymarket")
    lines.find_index("Haymarket")

5. Add 'Airport' to the start of the array 

    lines.unshift("Airport")
    lines.insert(0, "Airport")

6. Add 'York Place' to the end of the array

    lines.push("York Place")
    lines << "York Place"
    lines.insert(-1, "York Place")

7. Remove 'Edinburgh Park' from the array using its name 

    lines.delete("Edinburgh Park")

8. Delete 'Edinburgh Park' from the array by index

    lines.delete_at(1)

9. Reverse the positions of the stops in the array

      lines.reverse

10. Print out all of the stops using a for loop and a while loop
      
      for stops in lines
        puts stops
      end

      counter = 0
      while counter < lines.size
        puts lines[counter]
        counter += 1
      end


### B. Given the following data structure:

```
  my_hash = {0 => "Zero", 1 => "One", :two => "Two", "two" => 2}
```

1. How would you return the string `"One"`?

    my_hash[1]

2. How would you return the string `"Two"`?

    my_hash[:two]

3. How would you return the number `2`?

    my_hash["two"]

4. How would you add `{3 => "Three"}` to the hash? 

    my_hash[3] = "Three"

5. How would you add `{:four => 4}` to the hash? 

    my_hash[:four] = 4


### C. Given the following data structure:

```
  users = {
    "Jonathan" => {
      :twitter => "jonnyt",
      :favourite_numbers => [12, 42, 75, 12, 5],
      :home_town => "Stirling",
      :pets => {
        :fluffy => "cat",
        :fido => "dog",
        :spike => "dog"
      }
    },
    "Erik" => {
      :twitter => "eriksf",
      :favourite_numbers => [8, 12, 24],
      :home_town => "Linithgow",
      :pets => {
        :nemo => "fish",
        :kevin => "fish",
        :rover => "dog",
        :rupert => "parrot"
      }
    },
    "Avril" => {
      :twitter => "bridgpally",
      :favourite_numbers => [12, 14, 85, 88],
      :home_town => "Dunbar",
      :pets => {
        :sssteven => "snake"
      }
    },
  }
```

1. Return Jonathan's Twitter handle (i.e. the string `"jonnyt"`)

      users["Jonathan"][:twitter]

2. Return Erik's hometown 

      users["Erik"][:home_town]

3. Return the array of Erik's favorite numbers

      users["Erik"][:favourite_numbers]

4. Return the type of Avril's pet sssteven

      users["Avril"][:pets][:sssteven]

5. Return the smallest of Erik's favorite numbers

      users["Erik"][:favourite_numbers].sort[0]

6. Return an array of Avril's favorite numbers that are even 
      
      favourite_evens = []
      favourites = users["Avril"][:favourite_numbers]

      for number in favourites
        favourite_evens << number if number%2 == 0
      end

      print favourite_evens

      #or

      users["Avril"][:favourite_numbers].select { |x| x%2 == 0 }

7. Return an array of Jonathan's favourite numbers, sorted in ascending order and excluding duplicates

      users["Jonathan"][:favourite_numbers].sort.uniq

8. Add the number `7` to Erik's favorite numbers

      users["Erik"][:favourite_numbers] << 7

9. Change Erik's hometown to Edinburgh

      users["Erik"][:home_town] = "Edinburgh"

10. Add a pet dog to Erik called "Fluffy"

      users["Erik"][:pets][:fluffy] = "dog"

11. Add yourself to the users hash

      users["Kate"] = {}

      #or, with some data:
      
      users["Kate"] = {
        :home_town => "Sullom",
        :pets => {
          :the_beast => "spider"
          }
      }